{"version":3,"sources":["redux/actions/type.js","redux/reducers/UserReducer.js","redux/reducers/index.js","redux/sagas/NetworkSaga.js","redux/sagas/index.js","redux/store/index.js","screens/UserScreen.js","screens/HomeScreen.js","navigation/AppNavigator.js","App.js","index.js","ReactotronConfig.js","navigation/NavigationUtil.js"],"names":["GET_USER","initialState","data","isLoading","error","appReducer","combineReducers","userReducer","state","action","type","payload","getUserInfor","call","response","put","watchGetUser","takeEvery","rootSaga","sagaMonitor","Reactotron","createSagaMonitor","sagaMiddleware","createSagaMiddleware","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","createEnhancer","run","UserScreen","TouchableOpacity","onPress","NavigationUtil","goBack","children","Text","Component","X","HomeScreen","props","onPlay","x","y","board","turn","setState","isWin","val","JSON","stringify","setTimeout","alert","reset","n","length","s","i","genInitBoard","size","Array","from","keys","map","elem","View","style","alignSelf","flex","fontSize","this","flexDirection","borderWidth","borderRadius","padding","width","height","AppNavigator","ref","setHistory","path","exact","component","connect","App","require","default","ReactDOM","render","document","getElementById","reactotron","configure","name","use","reactotronRedux","sagaPlugin","_history","getHistory","module","exports","history","navigation","route","push"],"mappings":"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","file":"static/js/main.57f183ae.chunk.js","sourcesContent":["//user\r\nexport const RESET = 'windsoft/reset';\r\n\r\nexport const GET_USER = 'windsoft/getUser';\r\nexport const GET_USER_SUCCESS = 'windsoft/getUserSucces';\r\nexport const GET_USER_FAIL = 'windsoft/getUserFail';","import { GET_USER, GET_USER_SUCCESS, GET_USER_FAIL } from \"../actions/type\";\r\n\r\nconst initialState = {\r\n  data: {},\r\n  isLoading: true,\r\n  error: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_USER: {\r\n      return { ...state, isLoading: true };\r\n    }\r\n    case GET_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null,\r\n        data: action.payload\r\n      };\r\n    }\r\n    case GET_USER_FAIL: {\r\n     \r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isLoading: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport UserReducer from \"./UserReducer\";\r\nimport { RESET } from \"../actions/type\";\r\n\r\n\r\nlet appReducer= combineReducers({\r\n  userReducer: UserReducer,\r\n});\r\n\r\nconst initialState = appReducer({}, {})\r\n\r\nexport default (state, action) => {\r\n  if (action.type === RESET) {\r\n    state = initialState\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\n","import { put, takeEvery, call } from \"redux-saga/effects\";\r\nimport {\r\n  GET_USER,\r\n  GET_USER_SUCCESS,\r\n  GET_USER_FAIL,\r\n} from \"../actions/type\";\r\n\r\n// import * as API from \"../../constants/Api\";\r\n\r\nexport function* getUserInfor(payload) {\r\n  try {\r\n    const response = yield call();\r\n    yield put({ type: GET_USER_SUCCESS, payload: response });\r\n  } catch (err) {\r\n    yield put({ type: GET_USER_FAIL, payload: err });\r\n  }\r\n}\r\nexport const watchGetUser = takeEvery(GET_USER, getUserInfor);\r\n\r\n","import {\r\n  watchGetUser,\r\n} from \"./NetworkSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield watchGetUser;\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas\";\r\nimport Reactotron from \"../../ReactotronConfig\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst sagaMonitor = Reactotron.createSagaMonitor();\r\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n  // Specify here name, actionsBlacklist, actionsCreators and other options\r\n});\r\nconst store = createStore(\r\n  reducers,\r\n  {},\r\n  composeEnhancers(applyMiddleware(sagaMiddleware), Reactotron.createEnhancer())\r\n);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Text, TouchableOpacity } from \"react-native\";\r\nimport NavigationUtil from \"../navigation/NavigationUtil\";\r\nexport default class UserScreen extends Component {\r\n  render() {\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={() => NavigationUtil.goBack()}\r\n        children={<Text children=\"quay ve\" />}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Text, TouchableOpacity, View } from \"react-native\";\r\n\r\nconst NONE = \" \",\r\n  X = \"X\",\r\n  O = \"O\",\r\n  SIZE = 5;\r\n\r\nexport default class HomeScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      board: this.genInitBoard(SIZE),\r\n      turn: X,\r\n    };\r\n  }\r\n\r\n  onPlay = (x, y) => {\r\n    var { board, turn } = this.state;\r\n    if (board[x][y] != NONE) return;\r\n    board[x][y] = turn;\r\n    this.setState(\r\n      {\r\n        board,\r\n        turn: turn == X ? O : X,\r\n      },\r\n      () => {\r\n        if (this.isWin(x, y)) {\r\n          const val = JSON.stringify(board[x][y]);\r\n          setTimeout(() => {\r\n            alert(val + \"win\");\r\n            this.reset();\r\n          }, 100);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  isWin = (x, y) => {\r\n    const { board } = this.state;\r\n    const n = board.length > 4 ? 4 : board.length;\r\n    const s = board[x][y];\r\n    for (var i = 0; i < n; i++) {\r\n      if (board[x][i] != s) break;\r\n      if (i == n - 1) return true;\r\n    }\r\n    //check row\r\n    for (var i = 0; i < n; i++) {\r\n      if (board[i][y] != s) break;\r\n      if (i == n - 1) return true;\r\n    }\r\n    //check diag\r\n    if (x == y) {\r\n      //we're on a diagonal\r\n      for (var i = 0; i < n; i++) {\r\n        if (board[i][i] != s) break;\r\n        if (i == n - 1) return true;\r\n      }\r\n    }\r\n    //check anti diag (thanks rampion)\r\n    if (x + y == n - 1) {\r\n      for (var i = 0; i < n; i++) {\r\n        if (board[i][n - 1 - i] != s) break;\r\n        if (i == n - 1) return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  genInitBoard = (size = 3) => {\r\n    return Array.from(Array(size).keys()).map((elem) =>\r\n      Array.from(Array(size).keys()).map((val) => NONE)\r\n    );\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      board: this.genInitBoard(SIZE),\r\n      turn: X,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ alignSelf: \"center\", flex: 1 }}>\r\n        <Text\r\n          style={{ fontSize: 30, alignSelf: \"center\" }}\r\n          children={\"Turn: \" + this.state.turn}\r\n        />\r\n        <TouchableOpacity\r\n          onPress={this.reset}\r\n          children={\r\n            <Text\r\n              style={{ fontSize: 30, alignSelf: \"center\" }}\r\n              children={\"Reset\"}\r\n            />\r\n          }\r\n        />\r\n        {this.state.board.map((elem, x) => (\r\n          <View\r\n            style={{ flexDirection: \"row\", alignSelf: \"center\" }}\r\n            children={elem.map((val, y) => (\r\n              <TouchableOpacity\r\n                onPress={() => this.onPlay(x, y)}\r\n                style={{\r\n                  borderWidth: 1,\r\n                  borderRadius: 3,\r\n                  padding: 30,\r\n                  width: 100,\r\n                  height: 100,\r\n                }}\r\n                children={\r\n                  <Text\r\n                    style={{ fontSize: 30, alignSelf: \"center\" }}\r\n                    children={val}\r\n                  />\r\n                }\r\n              />\r\n            ))}\r\n          />\r\n        ))}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport UserScreen from \"../screens/UserScreen\";\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport { setHistory } from \"../navigation/NavigationUtil\";\r\nexport class AppNavigator extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter ref={setHistory}>\r\n        <Route path=\"/react_js_base\" exact component={HomeScreen} />\r\n        <Route path=\"/user\" exact component={UserScreen} />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavigator);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport AppNavigator from \"./navigation/AppNavigator\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={require(\"./redux/store\").default}>\r\n      <AppNavigator />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import \"./ReactotronConfig\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n","import Reactotron from \"reactotron-react-js\";\r\nimport { reactotronRedux } from \"reactotron-redux\";\r\nimport sagaPlugin from \"reactotron-redux-saga\";\r\nconst reactotron = Reactotron.configure({ name: \"React JS\" })\r\n  .use(reactotronRedux())\r\n  .use(sagaPlugin())\r\n  .connect();\r\n\r\nexport default reactotron;\r\n","let _history;\nconst getHistory = () => _history;\nmodule.exports = {\n  setHistory: (ref) => {\n    _history = ref.history;\n  },\n  navigation: (route) => {\n    getHistory().push(route);\n  },\n  goBack: () => {\n    getHistory().goBack();\n  },\n};\n"],"sourceRoot":""}